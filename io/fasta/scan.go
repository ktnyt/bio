package fasta

import (
	"bufio"
	"io"

	"github.com/ktnyt/bio"
)

// Scanner provides an interface for reading FASTA files as Seq objects.
type Scanner struct {
	scanner *bufio.Scanner
	buffer0 FASTA
	buffer1 FASTA
}

// NewScanner returns a new Reader to read from r.
func NewScanner(r io.Reader) *Scanner {
	s := bufio.NewScanner(r)
	f := FASTA{}

	for s.Scan() {
		line := s.Text()
		if line[0] == '>' {
			f.Description = line[1:]
			break
		}
	}

	return &Scanner{
		scanner: s,
		buffer0: f,
	}
}

// Scan attempts to load the next sequence in the given io.Reader.
func (r *Scanner) Scan() bool {
	read := false
	for r.scanner.Scan() {
		read = true
		line := r.scanner.Text()
		if line[0] == '>' {
			r.buffer1.Description = line[1:]
			r.buffer1.Sequence = ""
			break
		}
		r.buffer0.Sequence += line
	}
	if read {
		r.buffer0, r.buffer1 = r.buffer1, r.buffer0
	}
	return read
}

// Seq returns the most recent Seq object generated by a call to Scan.
func (r *Scanner) Seq() bio.Seq {
	return r.buffer1
}
